{"version":3,"sources":["Components/CartItem.jsx","Actions/Itemes.js","Actions/Actions.js","Components/CartContainer.jsx","Components/Navbar.jsx","Reducers/ItemsReducer.js","Data/CartItems.js","Reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["connect","dispatch","ownProps","id","amount","remove","type","payload","increase","decrease","img","title","price","className","src","alt","onClick","store","cart","total","useEffect","length","map","item","key","state","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-current","initialStore","ItemReducer","action","tempCart","cartItem","filter","reduce","cartTotal","parseFloat","toFixed","createStore","allReducers","window","__REDUX_DEVTOOLS_EXTENSION__","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9bcd7d4e.chunk.js","sourcesContent":["import React from 'react'\r\nimport {removeItems, increaseItem, decreaseItem} from '../Actions/Itemes'; \r\nimport {connect} from 'react-redux'; \r\n\r\nfunction CartItem({id, img, title, price, amount, remove, increase, decrease}) {\r\n \r\n    return (\r\n        <div className=\"card mb-3\" >\r\n            <div className=\"row g-0\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={img} className=\"cart_image\" alt=\"Item image\" />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{title}</h5>\r\n                        <p className=\"card-text\">$ {price}</p>\r\n\r\n                        <div className=\"modefy_amount\">\r\n                            <div>\r\n                                <button onClick={()=> remove()} className=\"remove_btn btn btn-sm btn-outline-danger\">Remove</button>\r\n                            </div>\r\n                            <div className=\"change_item\">\r\n                                <i  onClick={()=> increase()} className=\"fa fa-angle-up\"></i>\r\n                                <span className=\"amount\">{amount}</span>\r\n                                <i  onClick={()=> decrease()} className=\"fa fa-angle-down\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// get the dipatch function \r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const { id, amount } = ownProps; \r\n    return {\r\n        remove : () => dispatch(removeItems(id)),\r\n        increase : () => dispatch(increaseItem({id, amount})),\r\n        decrease : () => dispatch(decreaseItem({id, amount})),\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps) (CartItem)\r\n","import {INCREASE, DECREASE, CLEAR_CART, REMOVE, GET_TOTALS} from './Actions'\r\n\r\nexport const increaseItem = (data) => {\r\n    return {\r\n        type:INCREASE, \r\n        payload: data,\r\n    }\r\n}\r\n\r\nexport const decreaseItem = (data) =>{\r\n    return {\r\n        type:DECREASE, \r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const clearItems = () => {\r\n    return {\r\n        type: CLEAR_CART\r\n    }\r\n} \r\n\r\nexport const removeItems = (itemId) => {\r\n    return {\r\n        type: REMOVE, \r\n        payload: itemId\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getTotals = () => {\r\n    return {\r\n        type: GET_TOTALS\r\n    }\r\n}","\r\nexport const DECREASE = \"DECREASE\"; \r\nexport const INCREASE = \"INCREASE\"; \r\nexport const RESET = \"RESET\"; \r\nexport const REMOVE =\"REMOVE\"; \r\nexport const CLEAR_CART = \"CLEAR_CART\"; \r\nexport const GET_TOTALS = \"GET_TOTALS\"; \r\nexport const GET_AMOUNT = \"GET_AMOUNT\";\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CartItem from './CartItem'\r\nimport { increaseItem, decreaseItem, clearItems, getTotals} from \"../Actions/Itemes\";\r\n\r\n//{'id':1, 'img':'img.png', 'pice':12, 'amount':1}\r\nconst CartContainer = ({cart=[], total, dispatch}) => {\r\n    useEffect(() => {\r\n        dispatch(getTotals());\r\n    })\r\n\r\n\r\n    if(cart.length===0) {\r\n        return (\r\n            <section className=\"container mt-5\">\r\n                <div className=\"card\">\r\n                    {/* <h5 className=\"card-header\">Your Bag</h5> */}\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Your bag</h5>\r\n                        <p>is currently empty.</p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className=\"container\">\r\n            <header>Your Bag</header>\r\n\r\n            <article>\r\n                {cart.map(item=>{\r\n                    return <CartItem key={item.id} {...item} />\r\n                })} \r\n            </article>\r\n            <hr />\r\n\r\n            <footer className=\"cart_footer\">\r\n                <div className=\"cart_total\">\r\n                    <h4>Total: <span>$ {total}</span></h4>\r\n                </div>\r\n                <div>\r\n                    <button onClick={()=>dispatch(clearItems())} className=\"btn btn-danger clear_cart_btn\">Clear cart</button>\r\n                </div>\r\n            </footer>\r\n        </section>\r\n    )\r\n}\r\n\r\n/** Get cart data from global store */\r\nconst mapStateToProps = (store) => {\r\n    const {cart, total} = store;\r\n    return {cart, total};\r\n}\r\nexport default connect(mapStateToProps) (CartContainer)\r\n","import React from 'react'\r\nimport { connect, useSelector } from 'react-redux'; \r\n\r\nfunction Navbar({amount}) {\r\n  \r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand font-weight-bold\" href=\"#\">ReactRedux</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"#\">Link</a>\r\n                    </li>\r\n                </ul>\r\n                \r\n                <div className=\"shopping_cart\">\r\n                    <i className=\"fa fa-cart-arrow-down\"></i>\r\n                    <span className=\"counter\">{amount}</span>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    ); \r\n}\r\n\r\n\r\n/** Get data from the global store */\r\nconst mapStateToProps = (state) => {\r\n    return {amount: state.amount};\r\n}\r\nexport default connect(mapStateToProps) (Navbar)\r\n","import { act } from 'react-dom/test-utils'\r\nimport {DECREASE, INCREASE, CLEAR_CART, REMOVE, GET_TOTALS} from '../Actions/Actions'\r\nimport CartItems from '../Data/CartItems'; \r\n\r\nconst initialStore = {\r\n    cart : CartItems, \r\n    total:0, \r\n    amount: 0,\r\n}\r\n\r\nconst ItemReducer = (state = initialStore, action) => {\r\n\r\n    if(action.type === CLEAR_CART) {\r\n        return { \r\n            ...state, \r\n            cart:[], \r\n            amount:0\r\n        }\r\n    }\r\n\r\n    if(action.type === INCREASE) {\r\n        let tempCart = state.cart.map(cartItem => {\r\n            if(cartItem.id === action.payload.id) {\r\n                cartItem = {...cartItem, amount:cartItem.amount + 1}\r\n            }\r\n\r\n            return cartItem; \r\n        })\r\n        return {\r\n            ...state, \r\n            cart : tempCart\r\n        }\r\n    }\r\n\r\n    if(action.type === DECREASE) {\r\n        \r\n        let tempCart = []; \r\n\r\n        if(action.payload.amount === 1 ) {\r\n            tempCart = state.cart.filter(item => item.id !== action.payload.id);\r\n        } else {\r\n             tempCart = state.cart.map(cartItem => {\r\n                if(cartItem.id === action.payload.id) {\r\n                    cartItem = {...cartItem, amount:cartItem.amount - 1}\r\n                }\r\n    \r\n                return cartItem; \r\n            })\r\n        }\r\n\r\n\r\n        return {\r\n            ...state, \r\n            cart : tempCart,\r\n        }\r\n    }\r\n\r\n    if(action.type === REMOVE) {\r\n        return {\r\n            ...state, \r\n            cart:state.cart.filter(item => item.id !== action.payload), \r\n            amount: state.amount-1\r\n        }\r\n    }\r\n\r\n\r\n    if(action.type === GET_TOTALS) {\r\n\r\n        \r\n        let {total, amount} = state.cart.reduce((cartTotal, cartItem) => {\r\n            // price and item amount from cart \r\n            const {price, amount} = cartItem;\r\n            \r\n            // add to reduce object\r\n            cartTotal.amount += amount;\r\n            cartTotal.total += price*amount; \r\n            return cartTotal;\r\n        }, {\r\n            total: 0, \r\n            amount: 0\r\n        })\r\n       total = parseFloat(total.toFixed(2));\r\n        return {\r\n            ...state, \r\n            amount, \r\n            total\r\n        }\r\n    }\r\n\r\n    return state; \r\n}\r\n\r\nexport default ItemReducer;","export default [\r\n    {\r\n        id : 1, \r\n        title: \"Ihpone 11\", \r\n        price : 444.99, \r\n        img: \"https://www.three.co.uk/static/images/device_pages/MobileVersion/Apple/iPhone_11/Black/carousel/1.jpg\", \r\n        amount: 1\r\n    }, \r\n    {\r\n        id : 2, \r\n        title: \"Samsung A50\", \r\n        price : 234.99, \r\n        img: \"https://static.toiimg.com/thumb/msid-68254980,width-320,resizemode-4,imgv-9/Samsung-Galaxy-A50.jpg\", \r\n        amount: 1\r\n    }, \r\n    {\r\n        id : 3, \r\n        title: \"OPPO A31\", \r\n        price : 120.99, \r\n        img: \"https://switch.com.my/wp-content/uploads/2017/11/iPhone7-Black-2Up-34L-US-EN-SCREEN.jpg\", \r\n        amount: 1\r\n    }, \r\n    {\r\n        id : 4, \r\n        title: \"Ihpone 7\", \r\n        price : 444.99, \r\n        img: \"https://switch.com.my/wp-content/uploads/2017/11/iPhone7-Black-2Up-34L-US-EN-SCREEN.jpg\", \r\n        amount: 1\r\n    }, \r\n    {\r\n        id : 5, \r\n        title: \"Glaxy S10\", \r\n        price : 434.99, \r\n        img: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS0uOiVtDxaDqEWXXJqKStratu5JHcGLWGcFQ&usqp=CAU\", \r\n        amount: 1\r\n    },\r\n]","// import { combineReducers } from 'redux'; \r\n\r\nimport ItemReducer from './ItemsReducer'; \r\n// const allReducers = combineReducers({ItemReducer}); \r\nexport default ItemReducer; ","import React from 'react';\nimport './index.css';\n\nimport CartContainer from './Components/CartContainer';\nimport Navbar from './Components/Navbar'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'; \n\nimport allReducers from './Reducers'\n\n\nconst store = createStore (\n  allReducers, \n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n); \n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Navbar />\n      <CartContainer />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}